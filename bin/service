#!/usr/bin/env ruby
# =============================================================================
# Copyright (C) 2019-present Alces Flight Ltd.
#
# This file is part of Flight Service.
#
# This program and the accompanying materials are made available under
# the terms of the Eclipse Public License 2.0 which is available at
# <https://www.eclipse.org/legal/epl-2.0>, or alternative license
# terms made available by Alces Flight Ltd - please direct inquiries
# about licensing to licensing@alces-flight.com.
#
# Flight Service is distributed in the hope that it will be useful, but
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, EITHER EXPRESS OR
# IMPLIED INCLUDING, WITHOUT LIMITATION, ANY WARRANTIES OR CONDITIONS
# OF TITLE, NON-INFRINGEMENT, MERCHANTABILITY OR FITNESS FOR A
# PARTICULAR PURPOSE. See the Eclipse Public License 2.0 for more
# details.
#
# You should have received a copy of the Eclipse Public License 2.0
# along with Flight Service. If not, see:
#
#  https://opensource.org/licenses/EPL-2.0
#
# For more information on Flight Service, please visit:
# https://github.com/openflighthpc/flight-service
# ==============================================================================
begin
  # This dance is required to ensure that, if we're executing under
  # systemd for some reason (e.g. flight-service-systemd), then our
  # subprocesses aren't captured by the service cgroup.
  unless ENV['flight_SERVICE_constrain_cgroup'] == 'true'
    File.write('/sys/fs/cgroup/systemd/tasks' ,$$) rescue nil
  end

  lib_dir = File.expand_path(File.join(__FILE__, '../../lib'))
  $LOAD_PATH.unshift(lib_dir)
  ENV['BUNDLE_GEMFILE'] ||= File.join(__FILE__, '../../Gemfile')

  require 'rubygems'
  require 'bundler'

  Bundler.setup(:default)

  require 'service/cli'
  Dir.chdir(ENV.fetch('FLIGHT_CWD','.'))
  OpenFlight.set_standard_env rescue nil
  Service::CLI.run!
rescue Interrupt
  if Kernel.const_defined?(:Paint)
    $stderr.print "\n#{Paint['WARNING', :underline, :yellow]}: Cancelled by user"
  else
    $stderr.print "\nWARNING: Cancelled by user"
  end
  raise SignalException.new(2)
end
